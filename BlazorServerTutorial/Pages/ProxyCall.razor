@page "/call/proxy"
@using BlazorServerTutorial.Data
@inject IJSRuntime JS
@implements IAsyncDisposable
<button @onclick="CallFunction">Proxy Call</button>
<button @onclick="CallFunction2">Return CSharpObject</button>

@code {
    private Lazy<IJSObjectReference> Module = new();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Module = new(await JS.InvokeAsync<IJSObjectReference>("import", "./js/callByModule.js"));
        }
    }
    public async Task CallFunction()
    {
        var passObject = new CSharpObject();
        var refObject = DotNetObjectReference.Create<CSharpObject>(passObject);
        await Module.Value.InvokeVoidAsync("callProxyCSharpMethod", refObject);
        refObject?.Dispose();
    }

    public async Task CallFunction2()
    {
        var passObject = new CSharpObject();
        var refObject = DotNetObjectReference.Create<CSharpObject>(passObject);
        await Module.Value.InvokeVoidAsync("callReturnCSharpMethod", refObject);
        refObject?.Dispose();
    }

    public async ValueTask DisposeAsync()
    {
        await Module.Value.DisposeAsync();
    }
}