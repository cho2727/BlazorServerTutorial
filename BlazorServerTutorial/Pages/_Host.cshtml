@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace BlazorServerTutorial.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="BlazorServerTutorial.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    @* <script src="_framework/blazor.server.js"></script> *@
    <script src="_framework/blazor.server.js" autostart="false"></script>
    <script>
        Blazor.registerCustomEventType("custompaste", {
            browserEventName: 'paste',
            createEventArgs: event => {
                let isMultimedia = false;

                // We get the saved text in the clipboard
                let pastedData = event.clipboardData.getData('text');

                const items = event.clipboardData.items;

                // With this we'll filter the file by its media type
                const acceptedMediaTypes = ['image/png'];

                for (let i = 0; i < items.length; i++) {
                    const file = items[i].getAsFile();

                    // We verify there's a file in the current item
                    if (!file) {
                        continue;
                    }

                    // We verify the media type of the file
                    if (acceptedMediaTypes.indexOf(items[i].type) === -1) {
                        continue;
                    }

                    // it's an image
                    isMultimedia = true;
                    const url = window.URL || window.webkitURL;
                    pastedData = url.createObjectURL(file);
                }

                // We are passing the information to the custom event from JavaScript
                return {
                    eventTimestamp: new Date(),
                    isMultimedia,
                    pastedData
                }
            }
        })
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Blazor.start().then(function () {
                console.log("!!!!!!!!!!DOMContentLoaded and BlazorStart!!!!!!!!!!");
            });
        });
    </script>
    <script src="~/js/global.js"></script>


</body>
</html>
